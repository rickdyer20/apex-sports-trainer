# Google Cloud Build configuration
# Basketball Analysis Service - CI/CD Pipeline

steps:
  # Step 1: Install dependencies and run tests
  - name: 'python:3.11-slim'
    entrypoint: bash
    args:
      - -c
      - |
        apt-get update && apt-get install -y \
          ffmpeg \
          libgl1-mesa-glx \
          libglib2.0-0 \
          libsm6 \
          libxext6 \
          libxrender-dev \
          libgomp1
        pip install -r requirements.txt
        python -c "import basketball_analysis_service; print('✅ Import test passed')"
        python -c "import web_app; print('✅ Web app import test passed')"
    waitFor: ['-']

  # Step 2: Security and code quality checks
  - name: 'python:3.11-slim'
    entrypoint: bash
    args:
      - -c
      - |
        pip install bandit safety
        bandit -r . -f json -o bandit-report.json || true
        safety check --json --output safety-report.json || true
        echo "✅ Security checks completed"
    waitFor: ['0']

  # Step 3: Build container image for Cloud Run (optional)
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/basketball-analysis:$BUILD_ID', '.']
    waitFor: ['1']

  # Step 4: Push container image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/basketball-analysis:$BUILD_ID']
    waitFor: ['2']

  # Step 5: Deploy to App Engine
  - name: 'gcr.io/cloud-builders/gcloud'
    args: ['app', 'deploy', 'app.yaml', '--quiet', '--promote']
    waitFor: ['3']

  # Step 6: Run post-deployment health checks
  - name: 'gcr.io/cloud-builders/curl'
    args: 
      - -f
      - -s
      - -o
      - /dev/null
      - -w
      - "%{http_code}"
      - https://$PROJECT_ID.appspot.com/health
    waitFor: ['4']

# Build configuration
options:
  logging: CLOUD_LOGGING_ONLY
  machineType: 'E2_HIGHCPU_8'
  diskSizeGb: '50'

# Timeout for entire build
timeout: '1200s'

# Substitutions for environment-specific deployments
substitutions:
  _ENVIRONMENT: 'production'
  _SERVICE_NAME: 'basketball-analysis'

# Artifacts to store
artifacts:
  images:
    - 'gcr.io/$PROJECT_ID/basketball-analysis:$BUILD_ID'

# Trigger configuration (when connected to GitHub)
# This will trigger builds on push to main branch
