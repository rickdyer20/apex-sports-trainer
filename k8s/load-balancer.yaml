# Basketball Analysis Service - Load Balancer & Ingress Configuration
# Production-ready routing with SSL/TLS termination

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: basketball-analysis-ingress
  namespace: basketball-analysis
  annotations:
    # AWS Load Balancer Controller annotations
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/load-balancer-name: basketball-analysis-alb
    
    # SSL/TLS configuration
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-west-2:YOUR_ACCOUNT:certificate/YOUR_CERT_ID
    alb.ingress.kubernetes.io/ssl-policy: ELBSecurityPolicy-TLS-1-2-2017-01
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS": 443}]'
    alb.ingress.kubernetes.io/ssl-redirect: '443'
    
    # Security headers
    alb.ingress.kubernetes.io/actions.ssl-redirect: |
      {
        "Type": "redirect",
        "RedirectConfig": {
          "Protocol": "HTTPS",
          "Port": "443",
          "StatusCode": "HTTP_301"
        }
      }
    
    # Health check configuration
    alb.ingress.kubernetes.io/healthcheck-path: /health
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: '30'
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '5'
    alb.ingress.kubernetes.io/healthy-threshold-count: '2'
    alb.ingress.kubernetes.io/unhealthy-threshold-count: '3'
    
    # Load balancer attributes
    alb.ingress.kubernetes.io/load-balancer-attributes: |
      idle_timeout.timeout_seconds=60,
      deletion_protection.enabled=true,
      access_logs.s3.enabled=true,
      access_logs.s3.bucket=basketball-analysis-alb-logs
    
    # Rate limiting and security
    alb.ingress.kubernetes.io/wafv2-acl-arn: arn:aws:wafv2:us-west-2:YOUR_ACCOUNT:regional/webacl/basketball-analysis-waf/YOUR_WAF_ID
    
spec:
  rules:
  - host: app.basketballanalysis.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: basketball-analysis-web-service
            port:
              number: 80
  - host: api.basketballanalysis.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: basketball-analysis-web-service
            port:
              number: 80

---
# Network Policy for security
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: basketball-analysis-network-policy
  namespace: basketball-analysis
spec:
  podSelector:
    matchLabels:
      app: basketball-analysis
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    ports:
    - protocol: TCP
      port: 5000
  - from:
    - namespaceSelector:
        matchLabels:
          name: monitoring
    ports:
    - protocol: TCP
      port: 9090
  egress:
  - to: []
    ports:
    - protocol: TCP
      port: 443  # HTTPS
    - protocol: TCP
      port: 5432  # PostgreSQL
    - protocol: TCP
      port: 6379  # Redis
    - protocol: UDP
      port: 53   # DNS

---
# Service Monitor for Prometheus
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: basketball-analysis-metrics
  namespace: basketball-analysis
  labels:
    app: basketball-analysis
spec:
  selector:
    matchLabels:
      app: basketball-analysis
      component: web
  endpoints:
  - port: prometheus
    interval: 30s
    path: /metrics

---
# Vertical Pod Autoscaler for resource optimization
apiVersion: autoscaling.k8s.io/v1
kind: VerticalPodAutoscaler
metadata:
  name: basketball-analysis-web-vpa
  namespace: basketball-analysis
spec:
  targetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: basketball-analysis-web
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
    - containerName: web
      maxAllowed:
        cpu: 4
        memory: 8Gi
      minAllowed:
        cpu: 100m
        memory: 128Mi

---
apiVersion: autoscaling.k8s.io/v1
kind: VerticalPodAutoscaler
metadata:
  name: basketball-analysis-worker-vpa
  namespace: basketball-analysis
spec:
  targetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: basketball-analysis-worker
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
    - containerName: worker
      maxAllowed:
        cpu: 8
        memory: 16Gi
      minAllowed:
        cpu: 500m
        memory: 1Gi
